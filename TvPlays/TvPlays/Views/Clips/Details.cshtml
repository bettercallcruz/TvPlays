@model TvPlays.Models.Clips

@{
    ViewBag.Title = "Details";
}

<h2>@Html.DisplayFor(model => model.TitleClip)</h2>

<hr />


<div class="container-fluid">
    <div class="row">
        <div class="videoContainer col">
            <video src="@Url.Action("VideoClip", new {pathClip = Model.PathClip})" type="video/mp4" controls="true"></video>
        </div>
        <div class="commentsContainer col">
            @* Percore todos os comentarios associados ao Clip e lista-os *@
            @foreach (var item in Model.ListComments)
            {
            <div class="comment row">
                <div class="col">
                    <h5>@Html.DisplayFor(modelItem => item.User.Name)</h5>
                    @Html.DisplayFor(modelItem => item.ContComment)
                </div>
                @* Se o user for o dono do Comment entao pode apagar e editar *@
                @if (User.Identity.Name.Equals(item.User.Email))
                {
                    <div class="col">
                        <div class="editIcon row">
                            <a href="@Url.Action("Edit", "Comments", new { id = item.ID})">
                                <span>✏️</span>
                            </a>
                        </div>
                        <div class="deleteIcon row">
                            <a href="@Url.Action("Delete", "Comments", new { id = item.ID})">
                                <span>🗑️</span>
                            </a>
                        </div>
                    </div>
                }
                @* Se for o admin pode eliminar o comentario *@
                @if (User.IsInRole("Admin"))
                {
                    <div class="col">
                        <div class="deleteIcon row">
                            <a href="@Url.Action("Delete", "Comments", new { id = item.ID})">
                                <span>🗑️</span>
                            </a>
                        </div>
                    </div>
                }
            </div>
                <hr />
            }
            @* Tem de estar autenticado e os 'Admin' nao podem fazer comentarios *@
            @if (User.Identity.IsAuthenticated && !User.IsInRole("Admin")) {
                @Html.Action("Create", "Comments", new { id = Model.ID})
            }
        </div>
    </div>
</div>



<div>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.User.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.User.Name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.TitleClip)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.TitleClip)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.DateClip)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.DateClip)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.PathClip)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.PathClip)
        </dd>

    </dl>
</div>


<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.ID }) |
    @Html.ActionLink("Delete", "Delete", new { id = Model.ID }) |
    @Html.ActionLink("Back to List", "Index")
</p>
